{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"ReactDOM\"","webpack:///./lib/ControllerMeta.ts","webpack:///external \"React\"","webpack:///external \"EventEmitterModule\"","webpack:///./lib/index.ts","webpack:///./lib/Model.ts","webpack:///./lib/View.ts","webpack:///./lib/DOMEvents.ts","webpack:///./lib/DOMListener.ts","webpack:///./lib/utils/isValidTarget.ts","webpack:///./lib/utils/getPropertyFromEvent.ts","webpack:///./lib/utils/getNearestModelByEvent.ts","webpack:///./lib/Controller.ts"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","findHandlerArguments","controller","methodName","constructor","_handlersArguments","filter","someArgs","sort","b","argumentIndex","map","eventPropertyPath","isModelListener","listener","eventType","selector","target","descriptor","_listenersMeta","meta","push","firstKey","secondKey","otherPropertyPath","handlerArgs","propertyPath","length","ModelConstructor","listenersMeta","listeners","listenerMeta","handler","React","ReactDOM","EventEmitter","on","arg","Model","View","Controller","windowObj","MVC","props","options","changes","hasChanges","newValue","this","emit","event","super","domEvents","DOMEvents","Component","initModel","model","createControllers","Constructors","controllers","controllersInstances","Constructor","createController","ControllerConstructor","addController","setState","template","findDOMNode","_model","view","getListeners","addListener","isDomListener","DOMListener","listen","params","document","addEventListener","onDOMEvent","isValidEvent","args","getHandlerArgs","componentEl","isValidTarget","getNearestModelByEvent","Error","getPropertyFromEvent","parent","insideComponent","insideSelector","className","parentElement","eventPropertyValue","initModelEvents","modelListeners"],"mappings":"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","file":"only-mvc.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ReactDOM\"), require(\"React\"), require(\"EventEmitterModule\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ReactDOM\", \"React\", \"EventEmitterModule\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"ReactDOM\"), require(\"React\"), require(\"EventEmitterModule\")) : factory(root[\"ReactDOM\"], root[\"React\"], root[\"EventEmitterModule\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { Model } from \"./Model\";\nimport { Controller } from \"./Controller\";\n\nexport interface IHandlerArgs {\n    methodName: string;\n    argumentIndex: number;\n    eventPropertyPath: (new(...args: any[]) => Model) | string[]\n}\n\nexport interface IListenerMeta {\n    eventType: keyof HTMLElementEventMap;\n    selector: string;\n    methodName: string;\n}\n\nexport type HandlerArg = string[] | (new (...args: any[]) => Model);\n\nexport interface IListener {\n    eventType: keyof HTMLElementEventMap;\n    selector: string;\n    handlerArgs: HandlerArg[];\n    handler: (...args: any[]) => void;\n}\n\n\nexport function on(eventType: keyof HTMLElementEventMap, selector: string) {\n    return (target: any, methodName: string, descriptor: PropertyDescriptor) => {\n\n        if ( !target._listenersMeta ) {\n            target._listenersMeta = [];\n        }\n        \n        const meta: IListenerMeta = {\n            eventType,\n            selector,\n            methodName\n        };\n        target._listenersMeta.push(meta);\n    };\n}\n\ntype KeyOfDOMEvent = (\n    keyof Event |\n    keyof MouseEvent \n)\nexport function arg<T extends KeyOfDOMEvent | (new (...args: any[]) => Model)>(\n    firstKey?: T,\n    secondKey?: (\n        T extends keyof Event ?\n            (Event[T] extends Event[\"target\"] ? \n                keyof HTMLElement | keyof HTMLInputElement :\n                keyof Event[T]\n            ) :\n            never\n    ),\n    ...otherPropertyPath: string[]\n) {\n    return (target: any, methodName: string, argumentIndex: number) => {\n        if ( !target._handlersArguments ) {\n            target._handlersArguments = [];\n        }\n\n        const handlerArgs: IHandlerArgs = {\n            methodName,\n            argumentIndex,\n            eventPropertyPath: []\n        };\n\n        if ( typeof firstKey === \"string\" ) {\n            const propertyPath: string[] = [\n                firstKey as string\n            ];\n\n            if ( secondKey ) {\n                propertyPath.push(secondKey as string);\n            }\n            if ( otherPropertyPath.length ) {\n                propertyPath.push( ...otherPropertyPath );\n            }\n    \n            handlerArgs.eventPropertyPath = propertyPath;\n        }\n        else {\n            const ModelConstructor = firstKey as new (...args: any[]) => Model;\n            handlerArgs.eventPropertyPath = ModelConstructor;\n        }\n\n        target._handlersArguments.push(handlerArgs);\n        \n    };\n}\n\nexport function getListeners(controller: Controller<any>) {\n    const proto = controller.constructor.prototype;\n    const listenersMeta = (proto._listenersMeta || [] )as IListenerMeta[];\n    const listeners: IListener[] = [];\n\n    for (const listenerMeta of listenersMeta) {\n        const handler = (controller as any)[ listenerMeta.methodName ].bind(controller);\n        const handlerArgs = findHandlerArguments(\n            controller, \n            listenerMeta.methodName\n        );\n\n        const listener: IListener = {\n            eventType: listenerMeta.eventType,\n            selector: listenerMeta.selector,\n            handlerArgs,\n            handler\n        };\n        listeners.push(listener);\n    }\n\n    return listeners;\n}\n\n\nfunction findHandlerArguments(controller: Controller<any>, methodName: string): HandlerArg[] {\n    const proto = controller.constructor.prototype;\n\n    const handlersArguments: IHandlerArgs[] = proto._handlersArguments || [];\n    const handlerArgs = handlersArguments\n        .filter(someArgs =>\n            someArgs.methodName === methodName\n        )\n        .sort((a, b) =>\n            a.argumentIndex - b.argumentIndex\n        )\n        .map(someArgs =>\n            someArgs.eventPropertyPath\n        );\n    \n    return handlerArgs;\n}\n\nexport function isModelListener(listener: IListener) {\n    return (\n        listener.eventType === \"change\" &&\n        listener.selector === \"model\"\n    );\n}\n\nexport function isDomListener(listener: IListener) {\n    return !isModelListener(listener);\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {EventEmitter} from \"events\";\n\nimport {on, arg} from \"./ControllerMeta\";\nimport {Model} from \"./Model\";\nimport {View} from \"./View\";\nimport {Controller} from \"./Controller\";\n\nexport {\n    React,\n    ReactDOM,\n    EventEmitter,\n    Model,\n    View,\n    Controller,\n    on,\n    arg\n};\n\nif ( typeof window !== \"undefined\" ) {\n    const windowObj = window as any;\n    windowObj.MVC = {\n        React,\n        ReactDOM,\n        EventEmitter,\n        Model,\n        View,\n        Controller,\n        on,\n        arg\n    };\n\n    if ( !windowObj.React ) {\n        windowObj.React = React;\n    }\n    if ( !windowObj.ReactDOM ) {\n        windowObj.ReactDOM = ReactDOM;\n    }\n    if ( !windowObj.EventEmitter ) {\n        windowObj.EventEmitter = EventEmitter;\n    }\n}","import { EventEmitter } from \"events\";\n\nexport abstract class Model extends EventEmitter {\n\n    set(props: Partial<this>, options: any = {}) {\n        const changes: Partial<this> = {};\n        let hasChanges = false;\n\n        for (const key in props) {\n            const newValue = props[ key ] as this[ typeof key ];\n            const oldValue = this[ key ];\n\n            if ( newValue !== oldValue ) {\n                hasChanges = true;\n                this[ key ] = newValue;\n                changes[ key ] = newValue;\n            }\n        }\n\n        if ( hasChanges ) {\n            this.emit(\"change\", changes, options);\n        }\n    }\n\n    on(event: \"change\", handler: (changes: Partial<this>) => void): this;\n    on(event: string, handler: (...args: any[]) => void): this {\n        return super.on(event, handler);\n    }\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Model } from \"./Model\";\nimport { Controller } from \"./Controller\";\nimport { DOMEvents } from \"./DOMEvents\";\n\nconst domEvents = new DOMEvents();\n\nexport abstract class View<TModel extends Model> extends React.Component<{model: TModel}> {\n    model!: TModel;\n    protected controllersInstances!: Controller<TModel>[];\n    \n    abstract template(state: TModel): JSX.Element;\n\n    constructor(props: Readonly<{model: TModel}>) {\n        super(props);\n\n        this.initModel(props.model);\n        this.createControllers();\n    }\n\n    private createControllers() {\n        const Constructors = this.controllers();\n        this.controllersInstances = [];\n\n        for (const Constructor of Constructors) {\n            const controller = this.createController(Constructor);\n            this.controllersInstances.push(controller);\n        }\n    }\n\n    private createController(ControllerConstructor: new (model: TModel) => Controller<TModel>) {\n        const controller = new ControllerConstructor(this.model);\n        domEvents.addController(controller, this);\n\n        return controller;\n    }\n\n    private initModel(model: TModel) {\n        this.model = model;\n        this.model.on(\"change\", (changes) => {\n            this.setState({changes});\n        });\n    }\n\n    render() {\n        return this.template(this.model);\n    }\n\n    componentDidMount() {\n        const rootEl = ReactDOM.findDOMNode(this) as any;\n        rootEl._model = this.model;\n    }\n\n    controllers(): (new (model: TModel) => Controller<TModel>)[] {\n        return [];\n    }\n}\n","import { Controller } from \"./Controller\";\nimport { View } from \"./View\";\nimport { DOMListener } from \"./DOMListener\";\nimport { getListeners, isDomListener, IListener } from \"./ControllerMeta\";\n\nexport class DOMEvents {\n    \n    addController(controller: Controller<any>, view: View<any>) {\n        const listeners = getListeners(controller);\n\n        for (const listener of listeners) {\n            this.addListener(listener, view);\n        }\n    }\n\n    private addListener(\n        listener: IListener, \n        view: View<any>\n    ) {\n        if ( !isDomListener(listener) ) {\n            return;\n        }\n\n        const domListener = new DOMListener({\n            eventType: listener.eventType,\n            selector: listener.selector,\n            handlerArgs: listener.handlerArgs,\n            handler: listener.handler,\n            view\n        });\n\n        domListener.listen();\n    }\n}\n\n","import * as ReactDOM from \"react-dom\";\nimport { View } from \"./View\";\nimport { Model } from \"./Model\";\nimport { isValidTarget } from \"./utils/isValidTarget\";\nimport { getPropertyFromEvent } from \"./utils/getPropertyFromEvent\";\nimport { getNearestModelByEvent } from \"./utils/getNearestModelByEvent\";\n\ninterface IDOMListenerParams {\n    eventType: keyof HTMLElementEventMap;\n    selector: string;\n    handlerArgs: ( string[] | (new (...args: any[]) => Model))[];\n    handler: (...args: any[]) => void,\n    view: View<any>;\n}\n\nexport class DOMListener {\n    private eventType: keyof HTMLElementEventMap;\n    private selector: string;\n    private handlerArgs: ( string[] | (new (...args: any[]) => Model))[];\n    private handler: (...args: any[]) => void;\n    private view: View<any>;\n\n    constructor(params: IDOMListenerParams) {\n        this.eventType = params.eventType;\n        this.selector = params.selector;\n        this.handlerArgs = params.handlerArgs;\n        this.handler = params.handler;\n        this.view = params.view;\n    }\n\n    listen() {\n        document.addEventListener(this.eventType, (event: Event) => {\n            this.onDOMEvent(event);\n        });\n    }\n\n    private onDOMEvent(event: Event) {\n        if ( this.isValidEvent(event) ) {\n            const args = this.getHandlerArgs(event);\n            this.handler(...args);\n        }\n    }\n    private isValidEvent(event: Event): boolean {\n        const componentEl = ReactDOM.findDOMNode(this.view) as any;\n\n        const thisIsValidTarget = isValidTarget({\n            componentEl,\n            selector: this.selector,\n            target: event.target as any,\n        });\n\n        return thisIsValidTarget;\n    }\n\n    private getHandlerArgs(event: Event) {\n        const args: any[] = this.handlerArgs.map((eventPropertyPath) => {\n            if ( typeof eventPropertyPath === \"function\" ) {\n                const ModelConstructor = eventPropertyPath;\n                const model = getNearestModelByEvent(event, ModelConstructor);\n                if ( !model ) {\n                    throw new Error(\"cannot find model: \" + ModelConstructor.name);\n                }\n                return model;\n            }\n            else {\n                const argValue = getPropertyFromEvent(event, eventPropertyPath);\n                return argValue;\n            }\n        });\n\n        return args;\n    }\n}","\nexport function isValidTarget(params: {\n    componentEl: Element;\n    selector: string;\n    target: Element;\n}): boolean {\n    let parent: Element | null = params.target;\n    let insideComponent = false;\n    let insideSelector = false;\n\n    while ( parent ) {\n        if ( \".\" + parent.className === params.selector ) {\n            insideSelector = true;\n        }\n\n        if ( parent === params.componentEl ) {\n            insideComponent = true;\n            break;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return (\n        insideComponent && \n        insideSelector\n    );\n}\n","\nexport function getPropertyFromEvent(event: any, propertyPath: string[]) {\n    let eventPropertyValue: any = event;\n\n    for (const key of propertyPath) {\n        eventPropertyValue = eventPropertyValue[ key ];\n    }\n\n    return eventPropertyValue;\n}\n","import { Model } from \"../Model\";\n\nexport function getNearestModelByEvent(event: any, ModelConstructor: new () => Model): Model | null {\n    let parent: Element | null = event.target;\n\n    while ( parent ) {\n        const model = (parent as any)._model;\n        \n        if ( model instanceof ModelConstructor ) {\n            return model;\n        }\n\n        parent = parent.parentElement;\n    }\n\n    return null;\n}\n","import { Model } from \"./Model\";\nimport { getListeners, isModelListener } from \"./ControllerMeta\";\n\nexport abstract class Controller<TModel extends Model> {\n    protected model: Readonly<TModel>;\n\n    constructor(model: TModel) {\n        this.model = model;\n        this.initModelEvents();\n    }\n\n    private initModelEvents() {\n        const listeners = getListeners(this);\n        const modelListeners = listeners.filter(listener =>\n            isModelListener(listener)\n        );\n\n        for (const listener of modelListeners) {\n            const eventType = listener.eventType as any;\n\n            this.model.on(eventType, (...args) => {\n                listener.handler(...args);\n            });\n        }\n    }\n}"],"sourceRoot":""}